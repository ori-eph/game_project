audio {
    display: none;
}

body {
    width: 80%;
    height: 80vh;
    margin: auto;
    background-color: lightblue;
}

.recIcon {
    width: 40px;
    border-radius: 100%;
    margin-top: 10px;
}

.recIcon.pressed {
    display: none;
}

.red {
    background-color: #ff4949;

}

.green {
    background-color: #37ff00;
}

#on-btn {
    width: 5%;
    border-radius: 50%;
}

#piano {
    width: 100%;
    min-width: 400px;
    height: 40vh;
    background-color: black;
    margin: 0 auto;
    border: 1px solid gray;
    position: relative;
}

#keys {
    width: 84%;
    height: 25vh;
    position: absolute;
    bottom: 0;
    left: 8%;
    display: grid;
    grid-template-columns: repeat(24, 1fr);
    align-items: center;
}

#keys>* {
    height: 100%;
    background-color: white;
    border-right: 2px ridge black;
    border-bottom: 5px black ridge;
}

#keys div:last-child {
    border-right: none;
}

#keys div:hover {

    /* turns the keys gray when mouse is on them, important since style gets overwritten by 
    the style of the keys when they are called by the keyboard
     (they turn orange in the "playkeykeyboard" function) */

    background-color: lightgray !important;
}

#keys.playing {
    background-color: lightgray;
}


#drums>*:hover {
    background-color: chocolate;
}

#drums {
    display: flex;
    justify-content: center;
    align-items: center;
    column-gap: 1%;
}

.drum {
    position: relative;
    border-radius: 50%;
    box-shadow: inset -1em -1em 1.5em rgba(0, 0, 0, 0.2);
    border: 0.2em solid black;
    cursor: pointer;
    background: #dedcc7;
}

#drum1 {
    width: 20vh;
    height: 20vh;
}

#drum2 {
    width: 15vh;
    height: 15vh;
    align-self: center;
}

#drum3 {
    width: 10vh;
    height: 10vh;
    align-self: flex-end;
}

#drum4 {
    width: 8vh;
    height: 8vh;
    align-self: flex-end;
}

#drum5 {
    width: 12vh;
    height: 12vh;
}

#drum6 {
    width: 16vh;
    height: 16vh;
    background-color: rgb(184, 171, 138)
}

@keyframes drum-beat {
    0% {
        transform: translateZ(-40px) scale(1);
    }

    100% {
        transform: translateZ(-40px) scale(0.9);
    }
}

#drums>*:active {
    animation: drum-beat 0.5s alternate infinite;
    /* This makes the drum shrink and grow alternately */
}